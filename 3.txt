CREATING AND EXECUTING GRADLE PROJECT (GROOVY AND KOTLIN DSL)
Groovy DSL:
Create project:
gradle init --type java-application
Java version: 17
Project name: groovyProject
Structure: 1 (Single app)
DSL: 2 (Groovy)
Test: 1 (JUnit 4)
New APIs: no



build.gradle:
plugins {
    id 'application'
}

application {
    mainClass = 'com.example.AdditionOperation'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
}

test {
    outputs.upToDateWhen { false }

    testLogging {
        events "passed", "failed", "skipped"
        exceptionFormat "full"
        showStandardStreams = true
    }
}



App.java -> AdditionOperation.java:
package com.example;

public class AdditionOperation {
    public static void main(String[] args) {
        double num1 = 5;
        double num2 = 10;

        double sum = num1 + num2;

        System.out.printf("The sum of %.2f and %.2f is %.2f%n", num1, num2, sum);
    }
}



AppTest.java -> AdditionOperationTest.java:
package com.example;

import org.junit.Test;
import static org.junit.Assert.*;

public class AdditionOperationTest {

    @Test
    public void testAddition() {
        double num1 = 5;
        double num2 = 10;
        double expectedSum = num1 + num2;

        double actualSum = num1 + num2;

        assertEquals(expectedSum, actualSum, 0.01);
    }
}



Build, run and test:
gradle build     # Build project
gradle run       # Run app
gradle test      # Run tests





Kotlin DSL:
Create project:
gradle init --type java-application
Java version: 17
Project name: kotlinProject
Structure: 1 (Single app)
DSL: 1 (Kotlin)
Test: 1 (JUnit 4)
New APIs: no



build.gradle.kts:
plugins {
    kotlin("jvm") version "1.8.21"
    application 
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(kotlin("stdlib"))
    testImplementation("junit:junit:4.13.2")
}

application {
    mainClass.set("com.example.MainKt")
}

tasks.test {
    useJUnit() 

    testLogging {
        events("passed", "failed", "skipped") 
        exceptionFormat = org.gradle.api.tasks.testing.logging.TestExceptionFormat.FULL 
        showStandardStreams = true 
    }

    outputs.upToDateWhen { false }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}



App.java -> Main.kt:
package org.example

fun addNumbers(num1: Double, num2: Double): Double {
    return num1 + num2
}

fun main() {
    val num1 = 10.0
    val num2 = 5.0
    val result = addNumbers(num1, num2)
    println("The sum of $num1 and $num2 is: $result")
}



AppTest.java -> MainTest.kt:
package org.example

import org.junit.Assert.*
import org.junit.Test

class MainTest {

    @Test
    fun testAddNumbers() {
        val num1 = 10.0
        val num2 = 5.0
        
        val result = addNumbers(num1, num2)

        assertEquals("The sum of $num1 and $num2 should be 15.0", 15.0, result, 0.001)
    }
}



Build, run and test:
gradle build     # Build project
gradle run       # Run app
gradle test      # Run tests